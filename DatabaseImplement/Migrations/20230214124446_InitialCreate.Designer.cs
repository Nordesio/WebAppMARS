// <auto-generated />
using System;
using DatabaseImplement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseImplement.Migrations
{
    [DbContext(typeof(SalesDatabase))]
    [Migration("20230214124446_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatabaseImplement.Models.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("DatabaseImplement.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique()
                        .HasFilter("[ProductId] IS NOT NULL");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DatabaseImplement.Models.ProvidedProducts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductQuntity")
                        .HasColumnType("int");

                    b.Property<int?>("SalesPointId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalesPointId");

                    b.ToTable("ProvidedProducts");
                });

            modelBuilder.Entity("DatabaseImplement.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SalesPointId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("DatabaseImplement.Models.SalesData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<float>("ProductIdAmount")
                        .HasColumnType("real");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SaleId");

                    b.ToTable("SalesDatas");
                });

            modelBuilder.Entity("DatabaseImplement.Models.SalesPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SalesPoints");
                });

            modelBuilder.Entity("DatabaseImplement.Models.Product", b =>
                {
                    b.HasOne("DatabaseImplement.Models.ProvidedProducts", "ProvidedProducts")
                        .WithOne("Product")
                        .HasForeignKey("DatabaseImplement.Models.Product", "ProductId");

                    b.HasOne("DatabaseImplement.Models.SalesData", "SalesDatas")
                        .WithOne("Product")
                        .HasForeignKey("DatabaseImplement.Models.Product", "ProductId");

                    b.Navigation("ProvidedProducts");

                    b.Navigation("SalesDatas");
                });

            modelBuilder.Entity("DatabaseImplement.Models.ProvidedProducts", b =>
                {
                    b.HasOne("DatabaseImplement.Models.SalesPoint", "SalesPoint")
                        .WithMany("ProvidedProducts")
                        .HasForeignKey("SalesPointId");

                    b.Navigation("SalesPoint");
                });

            modelBuilder.Entity("DatabaseImplement.Models.SalesData", b =>
                {
                    b.HasOne("DatabaseImplement.Models.Sale", "Sale")
                        .WithMany("SalesData")
                        .HasForeignKey("SaleId");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("DatabaseImplement.Models.ProvidedProducts", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("DatabaseImplement.Models.Sale", b =>
                {
                    b.Navigation("SalesData");
                });

            modelBuilder.Entity("DatabaseImplement.Models.SalesData", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("DatabaseImplement.Models.SalesPoint", b =>
                {
                    b.Navigation("ProvidedProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
